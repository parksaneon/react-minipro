[{"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\index.js":"1","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\App.js":"2","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\root.js":"4","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Signup.jsx":"5","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Routine.jsx":"6","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Modify.jsx":"7","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\user.js":"8","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Login.jsx":"9","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\containers\\Login.jsx":"10","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\containers\\Signup.jsx":"11","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\signup.js":"12"},{"size":289,"mtime":1611024505583,"results":"13","hashOfConfig":"14"},{"size":1469,"mtime":1611024081485,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610977048909,"results":"16","hashOfConfig":"14"},{"size":364,"mtime":1610980606849,"results":"17","hashOfConfig":"14"},{"size":2291,"mtime":1611024407343,"results":"18","hashOfConfig":"14"},{"size":1856,"mtime":1610970800000,"results":"19","hashOfConfig":"14"},{"size":1183,"mtime":1610970800000,"results":"20","hashOfConfig":"14"},{"size":1411,"mtime":1611012954521,"results":"21","hashOfConfig":"14"},{"size":1087,"mtime":1610977456468,"results":"22","hashOfConfig":"14"},{"size":361,"mtime":1610977596150,"results":"23","hashOfConfig":"14"},{"size":382,"mtime":1611024486580,"results":"24","hashOfConfig":"14"},{"size":1327,"mtime":1611024427089,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"7havlw",{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\index.js",[],["56","57"],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\App.js",["58","59","60"],"import './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Routine from './components/Routine';\nimport Modify from './components/Modify';\n\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer, rootSaga } from './modules/root';\nimport LoginContainer from './containers/Login';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport SignupContainer from './containers/Signup';\n\nexport const history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducer(history),\n  composeWithDevTools(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\n\nsagaMiddleware.run(rootSaga);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          <Route path=\"/login\" component={LoginContainer} />\n          <Route path=\"/modify\" component={Modify} />\n          <Route path=\"/signup\" component={SignupContainer} />\n          <Route path=\"/\" exact component={Routine} />\n        </Switch>\n      </ConnectedRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\root.js",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Signup.jsx",["61"],"import React, { useCallback, useRef } from 'react';\nimport './Signup.scss';\n\nexport default function Signup({ onSignup }) {\n  const form = useRef();\n  const id = useRef();\n  const pass = useRef();\n  const name = useRef();\n  const gender = useRef();\n  const birth = useRef();\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const formData = new FormData(form.current);\n      const signUp = {};\n\n      for (const pair of formData) {\n        signUp[pair[0]] = pair[1];\n      }\n      onSignup(formData);\n\n      console.log(onSignup(signUp));\n    },\n    [onSignup],\n  );\n\n  return (\n    <div className=\"Signup\">\n      <h1>만나서 반가워요!</h1>\n      <p>알찬 하루를 보낼 준비가 됐나요?</p>\n      <form ref={form} onSubmit={onSubmit}>\n        <div>\n          <label htmlFor=\"user-id\">아이디</label>\n          <input type=\"text\" required name=\"user-id\" ref={id} />\n        </div>\n        <div>\n          <label htmlFor=\"user-pass\">비밀번호</label>\n          <input type=\"password\" required name=\"user-pass\" ref={pass} />\n        </div>\n        <div>\n          <label htmlFor=\"user-repass\">비밀번호</label>\n          <input type=\"password\" required name=\"user-repass\" />\n        </div>\n        <div>\n          <label htmlFor=\"user-name\">이름</label>\n          <input type=\"text\" required name=\"user-name\" ref={name} />\n        </div>\n        <div>\n          <label>성별</label>\n          <ul className=\"gender-list\">\n            <li>\n              <label>\n                <input type=\"radio\" name=\"gender\" ref={gender} value=\"남\" />남\n              </label>\n            </li>\n            <li>\n              <label>\n                <input type=\"radio\" name=\"gender\" ref={gender} value=\"여\" />여\n              </label>\n            </li>\n          </ul>\n        </div>\n        <div>\n          <label htmlFor=\"user-birth\">생년월일</label>\n          <input type=\"text\" required name=\"user-birth\" ref={gender} />\n        </div>\n        <div class=\"check-div\">\n          <label>\n            <input type=\"checkbox\" />\n            마이루틴의 이용약관과 개인정 취급방식에 동의합니다.\n          </label>\n        </div>\n        <button type=\"submit\">하루 관리 시작하기</button>\n      </form>\n    </div>\n  );\n}\n","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Routine.jsx",["62","63"],"import { useEffect, useState } from 'react';\nimport { BsPlus } from 'react-icons/bs';\nimport './Routine.scss';\nimport { MdAccessTime } from 'react-icons/md';\nimport { GiHistogram } from 'react-icons/gi';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { FiMoreHorizontal } from 'react-icons/fi';\nimport Moment from 'react-moment';\nimport 'moment/locale/ko';\nimport moment from 'moment';\n// const todos = [{id: 1, message: }];\n\nconst Lilist = () => {\n  const [state, setState] = useState([\n    { id: 1, message: '아침 루트\u001d', firsttime: '9:15am', lasttime: '9:16am' },\n    { id: 2, message: '밥먹기\u001d', firsttime: '0:00am', lasttime: '' },\n  ]);\n  console.log(state);\n  return state.map(todo => {\n    return (\n      <li className=\"Routine-list\">\n        {todo.message}\n        <time>\n          {todo.firsttime} {todo.lasttime && '~'} {todo.lasttime}\n        </time>\n        <button>\n          <FiMoreHorizontal />\n        </button>\n      </li>\n    );\n  });\n};\n\nconst Routine = () => {\n  console.log(moment().format());\n\n  return (\n    <div className=\"Routine\">\n      <div className=\"header\">\n        <time>\n          <Moment interval={1000} format=\"M.DD (dd) hh:mm A\" />\n        </time>\n        <h1>평온한 오후입니다.</h1>\n      </div>\n      <ul className=\"section\">\n        <Lilist />\n      </ul>\n      <div className=\"plus\">\n        <button>\n          <BsPlus />\n        </button>\n      </div>\n      <nav className=\"navigation\">\n        <ul>\n          <li>\n            <button>\n              <MdAccessTime />\n            </button>\n          </li>\n          <li>\n            <button>\n              <GiHistogram />\n            </button>\n          </li>\n          <li>\n            <button>\n              <BsFillPersonFill />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Routine;\n","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Modify.jsx",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\user.js",["64","65"],"import axios from 'axios';\nimport { push } from 'connected-react-router';\nimport { createAction, createActions, handleActions } from 'redux-actions';\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\n// const prefix = 'progeser/user';\n\n// type\\\nconst LOGINSTART = 'login/START';\nconst LOGINSUCCESS = 'login/SUCCESS';\nconst LOGINFAIL = 'login/FAIL';\n\n// 액션 생성 함수\nexport const loginStart = createAction(LOGINSTART, (id, pass) => ({ id, pass }));\nconst loginSuccess = createAction(LOGINSUCCESS, (id, pass) => ({ id, pass }));\nconst loginFail = createAction(LOGINFAIL);\n\n// 리듀서\nconst userinfo = handleActions(\n  {\n    [LOGINSTART]: state => ({ ...state }),\n    [LOGINSUCCESS]: (state, { payload }) => ({\n      ...state,\n      ...payload,\n    }),\n    [LOGINFAIL]: state => ({ ...state }),\n  },\n  {},\n);\n\nexport default userinfo;\n\nfunction* loginSaga({ payload }) {\n  try {\n    const loginUser = yield call(axios.get, `/users/${payload.id}`);\n    if (loginUser.data.pass !== +payload.pass) {\n      throw new Error('비밀번호가 달라요');\n    }\n    yield put(loginSuccess(payload));\n    localStorage.setItem('token', JSON.stringify(loginUser.data));\n    yield put(push('/'));\n    console.log(localStorage.getItem('token'));\n  } catch (error) {\n    console.log(error);\n    yield put(loginFail());\n  }\n}\n\nexport function* userSaga() {\n  yield takeEvery(LOGINSTART, loginSaga);\n}\n","C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\components\\Login.jsx",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\containers\\Login.jsx",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\containers\\Signup.jsx",[],"C:\\Users\\user\\Documents\\코딩\\react\\progreser-develop\\src\\modules\\signup.js",["66","67"],"import axios from 'axios';\r\nimport { push } from 'connected-react-router';\r\nimport { createAction, createActions, handleActions } from 'redux-actions';\r\nimport { call, put, select, takeEvery } from 'redux-saga/effects';\r\n// const prefix = 'progeser/user';\r\n\r\n// type\r\nconst SIGNUPSTART = 'signup/START';\r\nconst SIGNUPUCCESS = 'signup/SUCCESS';\r\nconst SIGNUPFAIL = 'signup/FAIL';\r\n\r\n// 액션 생성 함수\r\nexport const signupStart = createAction(SIGNUPSTART, userData => userData);\r\nconst signinSuccess = createAction(SIGNUPUCCESS, userData => userData);\r\nconst signinFail = createAction(SIGNUPFAIL);\r\n\r\n// 리듀서\r\nconst userinfo = handleActions(\r\n  {\r\n    [SIGNUPSTART]: state => ({ ...state }),\r\n    [SIGNUPUCCESS]: (state, { payload }) => ({\r\n      ...state,\r\n      ...payload,\r\n    }),\r\n    [SIGNUPFAIL]: state => ({ ...state }),\r\n  },\r\n  {},\r\n);\r\n\r\nexport default userinfo;\r\n\r\nfunction* signinSaga({ payload }) {\r\n  try {\r\n    const loginUser = yield call(axios.post, `/users/`, { payload });\r\n    yield put(signinSuccess(payload));\r\n    localStorage.setItem('token', JSON.stringify(loginUser.data));\r\n    yield put(push('/'));\r\n    console.log(localStorage.getItem('token'));\r\n  } catch (error) {\r\n    yield put(signinFail());\r\n  }\r\n}\r\n\r\nexport function* signsaga() {\r\n  yield takeEvery(SIGNUPSTART, signinSaga);\r\n}\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":13},{"ruleId":"72","severity":1,"message":"76","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"72","severity":1,"message":"77","line":16,"column":10,"nodeType":"74","messageId":"75","endLine":16,"endColumn":23},{"ruleId":"72","severity":1,"message":"78","line":10,"column":9,"nodeType":"74","messageId":"75","endLine":10,"endColumn":14},{"ruleId":"72","severity":1,"message":"79","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":19},{"ruleId":"72","severity":1,"message":"80","line":14,"column":17,"nodeType":"74","messageId":"75","endLine":14,"endColumn":25},{"ruleId":"72","severity":1,"message":"81","line":3,"column":24,"nodeType":"74","messageId":"75","endLine":3,"endColumn":37},{"ruleId":"72","severity":1,"message":"82","line":4,"column":21,"nodeType":"74","messageId":"75","endLine":4,"endColumn":27},{"ruleId":"72","severity":1,"message":"81","line":3,"column":24,"nodeType":"74","messageId":"75","endLine":3,"endColumn":37},{"ruleId":"72","severity":1,"message":"82","line":4,"column":21,"nodeType":"74","messageId":"75","endLine":4,"endColumn":27},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","'BrowserRouter' is defined but never used.","'birth' is assigned a value but never used.","'useEffect' is defined but never used.","'setState' is assigned a value but never used.","'createActions' is defined but never used.","'select' is defined but never used.","no-global-assign","no-unsafe-negation"]